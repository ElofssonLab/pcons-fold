{"name":"PconsFold","tagline":"A pipeline for protein folding using predicted contacts from PconsC and Rosetta.","body":"## Pipeline overview:\r\n\r\n1. __Input:__ fasta file containing one protein sequence\r\n2. Prepare input for PconsC\r\n3. Contact prediction with PconsC\r\n4. Prepare input for Rosetta folding\r\n5. Rosetta folding\r\n6. Extract and relax structures with lowest Rosetta energy\r\n7. __Output:__ the predicted contact map (also as a plot) and the top-ranked structural model(s) relaxed and non-relaxed\r\n\r\n\r\n## Dependencies:\r\n\r\n- [Rosetta v3.5 or weekly built](https://www.rosettacommons.org/software)\r\n- [Jackhmmer from HMMER v3.0 or higher](http://hmmer.janelia.org/)\r\n- [HHblits from HHsuite v2.0.16](http://toolkit.tuebingen.mpg.de/hhblits)\r\n- [PSICOV v1.11](http://bioinfadmin.cs.ucl.ac.uk/downloads/PSICOV/)\r\n- [plmDCA symmetric v2](http://plmdca.csc.kth.se/)\r\n- either MATLAB v8.1 or higher\r\n- or [MATLAB Compiler Runtime (MCR) v8.1](http://www.mathworks.se/products/compiler/mcr/)\r\n\r\nMATLAB is needed to run plmDCA. However, if MATLAB is not available you can also use a compiled version of plmDCA. For the compiled version to run you need to provide a path to MCR.\r\n\r\n\r\n## How to run it:\r\n\r\n__Make sure__ all dependencies are working correctly and adjust the paths in `localconfig.py`.\r\n\r\nTo run the full pipeline use:\r\n```\r\n./pcons_fold.py [-c n_cores] [-n n_decoys] [-m n_models]\r\n                [-f factor] [--norelax] [--nohoms] \r\n                hhblits_database jackhmmer_database sequence_file\r\n```\r\n- Required:\r\n  - `hhblits_database` and `jackhmmer_database` are paths to the databases used by HHblits and Jackhmmer\r\n  - `sequence_file` is the path to the input protein sequence in FASTA format (only single sequences). \r\n- Optional:\r\n  - `n_cores` specifies the number of cores to use during computation (default: number of available cores). \r\n  - `n_decoys` specifies  the number of decoy structures generated by Rosetta (default: 2000, see publication). \r\n  - `n_models` is the number of top-ranked models being extracted and eventually relaxed in the end (default: 10).\r\n  - `factor` determines the number of constraints used to fold the protein, which is: `factor` * length_of_the_input_sequence (default: 1.0). \r\n  - `norelax` is a flag that supresses relaxation of the final models. This can be used to quickly extract structures in the end. \r\n  - `nohoms` is a flag that ensures that homologous structures are excluded from fragment picking. This is only useful in test cases if the model quality needs to be evaluated with a known structure.\r\n\r\n\r\n---\r\n\r\n\r\nYou can also __run PconsC contact prediction__ independently with this command:\r\n```\r\n./pconsc/predict_all.py [-c cores] hhblits_database jackhmmer_database sequence_file\r\n```\r\n\r\n\r\nAnd then __fold the protein__ according to given predicted contacts with the following commands:\r\n``` \r\n./folding/rosetta/prepare_input.py [-f factor] [--nohoms] sequence_file contact_map \r\n\r\n./folding/rosetta/fold.py [-c n_cores] [-n n_decoys] sequence_file rosetta_constraintfile\r\n\r\n./folding/rosetta/extract.py [-c n_cores] [-m n_models] [--norelax] number_of_extracted_structures\r\n```\r\n\r\nThe first script generates the file `(pconsc_output)-(factor).constraints` which is then used by Rosetta in the next step with `rosetta_constraintfile`.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}